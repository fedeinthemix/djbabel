name: Test, Build and Release

on:
  push:
    tags:
      - 'v*'  # Only on version tags like v1.0.0

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install hatch and create environment
        run: |
          python -m pip install --upgrade pip
          pip install hatch pytest
          hatch env create

      - name: Run tests
        run: |
          hatch run pytest --maxfail=1 --disable-warnings -q


  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            suffix: linux
          - os: windows-latest
            suffix: win
          - os: macos-latest
            suffix: mac

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install hatch and pyinstaller
        run: |
          python -m pip install --upgrade pip
          pip install hatch pyinstaller
          hatch env create

      - name: Build executable with PyInstaller
        env:
          PYINSTALLER_NAME: djbabel-${{ matrix.suffix }}
        run: |
          hatch run pyinstaller djbabel.spec

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.suffix }}-binary
          path: dist/*


  release:
    if: false # skip during tests
    name: Create Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
